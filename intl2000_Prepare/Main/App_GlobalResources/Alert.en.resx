<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ArrivalDateMustNearThanDepartureDate" xml:space="preserve">
    <value>Arrival date Must near than departure date</value>
    <comment>RequestFormWrite</comment>
  </data>
  <data name="CallError" xml:space="preserve">
    <value>Error! Ask korea@nn21.com please</value>
  </data>
  <data name="CountryMust" xml:space="preserve">
    <value>Please select country</value>
  </data>
  <data name="DeleteComplete1" xml:space="preserve">
    <value>Delete complete</value>
  </data>
  <data name="ModifySuccess" xml:space="preserve">
    <value>Modify Complete</value>
  </data>
  <data name="MustAddress" xml:space="preserve">
    <value>Please Type Address</value>
  </data>
  <data name="MustArrivalArea" xml:space="preserve">
    <value>Please select arrival area</value>
    <comment>RequestFormWrite</comment>
  </data>
  <data name="MustArrivalDate" xml:space="preserve">
    <value>Please select arrival date</value>
    <comment>RequestFormWrite</comment>
  </data>
  <data name="MustCompanyName" xml:space="preserve">
    <value>Please Type Company name</value>
  </data>
  <data name="MustDeliveryWay" xml:space="preserve">
    <value>Please select fright delivery way to our office</value>
    <comment>RequestFormWrite</comment>
  </data>
  <data name="MustDepartureArea" xml:space="preserve">
    <value>Please select departure area</value>
    <comment>RequestFormWrite</comment>
  </data>
  <data name="MustDepartureDate" xml:space="preserve">
    <value>Please select departure date</value>
    <comment>RequestFormWrite</comment>
  </data>
  <data name="MustDuties" xml:space="preserve">
    <value>Please Type your Position</value>
    <comment>CompanyJoin1</comment>
  </data>
  <data name="MustEmail" xml:space="preserve">
    <value>Please Type By E-mail form</value>
  </data>
  <data name="MustJuminNo" xml:space="preserve">
    <value>Please Type resident registration No of korea </value>
    <comment>CompanyJoin1</comment>
  </data>
  <data name="MustNotifyPartyAddress" xml:space="preserve">
    <value>please set address in notify party</value>
    <comment>RequestFormWrite</comment>
  </data>
  <data name="MustNotifyPartyBank" xml:space="preserve">
    <value>Please set bank name</value>
    <comment>RequestFormWrite</comment>
  </data>
  <data name="MustNotifyPartyCompanyName" xml:space="preserve">
    <value>please set company name</value>
    <comment>RequestFormWrite</comment>
  </data>
  <data name="MustPickupRequestDate" xml:space="preserve">
    <value>Please set pickup request date</value>
    <comment>RequestFormWrite</comment>
  </data>
  <data name="MustPresidentName" xml:space="preserve">
    <value>Please Type President name</value>
  </data>
  <data name="MustShipper" xml:space="preserve">
    <value>Please set consignee</value>
    <comment>RequestFormWrite</comment>
  </data>
  <data name="MustShipperNameInDocument" xml:space="preserve">
    <value>Please set shipper in TradeDocument</value>
    <comment>RequestFormWrite</comment>
  </data>
  <data name="MustTransportWay" xml:space="preserve">
    <value>Please set transport way</value>
    <comment>RequestFormWrite</comment>
  </data>
  <data name="MustWriterName" xml:space="preserve">
    <value>Please Type your name</value>
    <comment>CompanyJoin1</comment>
  </data>
  <data name="NoAccount" xml:space="preserve">
    <value>AccountID Not Existed</value>
  </data>
  <data name="NotifyPartyMSG" xml:space="preserve">
    <value>통지처는 선박회사가 화물의 도착 통지를 하는 대상을 의미합니다. 
통상 수입자와 같음이지만, 물류 / 통관업무를 진행할 업체를 특별히 지정할 필요가 있을경우나 신용장 결제처럼 대금보증인이 따로 있을경우 기재하게 됩니다. 신용장 결재인 경우엔 신용장 발행은행이 수화인이 되고, 실 수입자가 통지처에 들어가게 됩니다.
통지처를 지정하시겠으면 '확인'
수하인과 같음으로 하시겠으면 '취소'를 선택해 주세요</value>
  </data>
  <data name="NotRightJuminNo" xml:space="preserve">
    <value>incorrect resident registration No</value>
    <comment>CompanyJoin1</comment>
  </data>
  <data name="PWDDifferent" xml:space="preserve">
    <value>Two password are different</value>
  </data>
  <data name="PWDMust" xml:space="preserve">
    <value>Please type password</value>
  </data>
  <data name="Rejection" xml:space="preserve">
    <value>You can't access this page</value>
  </data>
  <data name="WrongEmail" xml:space="preserve">
    <value>Please Type E-mail</value>
    <comment>CompanyJoin1</comment>
  </data>
  <data name="WrongMobile" xml:space="preserve">
    <value>Please Type TEL by Number</value>
    <comment>CompanyJoin1</comment>
  </data>
  <data name="WrongPWD" xml:space="preserve">
    <value>Wrong Password</value>
  </data>
  <data name="WrongTEL" xml:space="preserve">
    <value>Please Type TEL by Number</value>
    <comment>CompanyJoin1</comment>
  </data>
  <data name="CompanyCodeBeingUsed" xml:space="preserve">
    <value>CompanyCode being used</value>
    <comment>RequestFormView</comment>
  </data>
  <data name="SetCompanyCodeAuto1" xml:space="preserve">
    <value>Auto Number</value>
    <comment>RequestFormView</comment>
  </data>
  <data name="SetCompanyCodeAuto2" xml:space="preserve">
    <value>Will you set Companycode by this number?</value>
    <comment>RequestFormView</comment>
  </data>
  <data name="MustCompanyNamee" xml:space="preserve">
    <value>Please Type English Company name</value>
  </data>
</root>