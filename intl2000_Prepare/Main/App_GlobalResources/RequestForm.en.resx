<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Days" xml:space="preserve">
    <value>Days</value>
    <comment>1</comment>
  </data>
  <data name="ListTitle_CompanyCode" xml:space="preserve">
    <value>Company code</value>
    <comment>1</comment>
  </data>
  <data name="ListTitle_RequestDate" xml:space="preserve">
    <value>Requested date</value>
    <comment>1</comment>
  </data>
  <data name="ListTitle_Schedule" xml:space="preserve">
    <value>Schedule</value>
    <comment>1</comment>
  </data>
  <data name="ListTitle_StartDate" xml:space="preserve">
    <value>Start date</value>
    <comment>1</comment>
  </data>
  <data name="ListTitle_Step" xml:space="preserve">
    <value>Step</value>
    <comment>1</comment>
  </data>
  <data name="ListTitle_TransportWay" xml:space="preserve">
    <value>Transport procedure</value>
    <comment>1</comment>
  </data>
  <data name="TransportWay_flight" xml:space="preserve">
    <value>Air Cargo</value>
    <comment>1</comment>
  </data>
  <data name="TransportWay_Mixed" xml:space="preserve">
    <value>LCL Cargo</value>
    <comment>1</comment>
  </data>
  <data name="TransportWay_Special" xml:space="preserve">
    <value>Air Express</value>
    <comment>1</comment>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>Total Amount</value>
  </data>
  <data name="AreaDetailSelection" xml:space="preserve">
    <value>select details of area </value>
  </data>
  <data name="AreaSelection" xml:space="preserve">
    <value>selet area</value>
  </data>
  <data name="Arrival" xml:space="preserve">
    <value>Arrival</value>
  </data>
  <data name="ArrivalCountrySelection" xml:space="preserve">
    <value>selet Arrival Country</value>
  </data>
  <data name="ArrivalDate" xml:space="preserve">
    <value>Arrival Date</value>
  </data>
  <data name="ArrivalLocal1" xml:space="preserve">
    <value>Arrival Area</value>
  </data>
  <data name="ArrivalLocal2" xml:space="preserve">
    <value>detailed arrival area</value>
  </data>
  <data name="BoxNo" xml:space="preserve">
    <value>Box No.</value>
  </data>
  <data name="Calendar" xml:space="preserve">
    <value>Calendar</value>
  </data>
  <data name="certificateoforigin" xml:space="preserve">
    <value>Certificate of the origin</value>
  </data>
  <data name="Clearance" xml:space="preserve">
    <value>the name of Shipper In Document</value>
  </data>
  <data name="ClearanceSubstitute" xml:space="preserve">
    <value>name agent business</value>
    <comment>대행</comment>
  </data>
  <data name="ClearanceWay" xml:space="preserve">
    <value>Customs procedure</value>
    <comment>통관방법</comment>
  </data>
  <data name="CompanyName" xml:space="preserve">
    <value>Company Name</value>
  </data>
  <data name="Consignee" xml:space="preserve">
    <value>Consignee</value>
  </data>
  <data name="ConsigneeAdd" xml:space="preserve">
    <value>add Consignee</value>
  </data>
  <data name="ConsigneeCompanyName" xml:space="preserve">
    <value>Consignee's Company Name</value>
  </data>
  <data name="ConsigneeSelection" xml:space="preserve">
    <value>Select Consignee </value>
  </data>
  <data name="Count" xml:space="preserve">
    <value>Count</value>
  </data>
  <data name="Departure" xml:space="preserve">
    <value>Departure</value>
  </data>
  <data name="DepartureCountrySelection" xml:space="preserve">
    <value>select Departure Country</value>
  </data>
  <data name="DepartureDate" xml:space="preserve">
    <value>Departure Date</value>
  </data>
  <data name="DepartureLocal1" xml:space="preserve">
    <value>Departure Area</value>
  </data>
  <data name="DepartureLocal2" xml:space="preserve">
    <value>Departure Detail</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="ElectricSafety" xml:space="preserve">
    <value>Electric safety approval</value>
  </data>
  <data name="ETC" xml:space="preserve">
    <value>ETC</value>
  </data>
  <data name="FoodSanitation" xml:space="preserve">
    <value>Food sanitation license</value>
  </data>
  <data name="Freight" xml:space="preserve">
    <value>freight</value>
  </data>
  <data name="Freightman" xml:space="preserve">
    <value>freight manager</value>
  </data>
  <data name="GrossWeight" xml:space="preserve">
    <value>Gross Weight</value>
  </data>
  <data name="InsertItem" xml:space="preserve">
    <value>Insert Item</value>
  </data>
  <data name="Label" xml:space="preserve">
    <value>Label</value>
  </data>
  <data name="Material" xml:space="preserve">
    <value>Material</value>
  </data>
  <data name="Mobile" xml:space="preserve">
    <value>Mobile</value>
  </data>
  <data name="MonetaryUnitChange" xml:space="preserve">
    <value>MonetaryUnit</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NEW" xml:space="preserve">
    <value>NEW</value>
    <comment>1</comment>
  </data>
  <data name="None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="NotifyParty" xml:space="preserve">
    <value>Notify Party</value>
  </data>
  <data name="PackingCount" xml:space="preserve">
    <value>Packing Count</value>
  </data>
  <data name="Payment" xml:space="preserve">
    <value>Payment plan</value>
  </data>
  <data name="PaymentA" xml:space="preserve">
    <value>EXW : The buyer pays all costs (A)</value>
  </data>
  <data name="PaymentAEx" xml:space="preserve">
    <value>EX-Works|The buyer pays all transportation costs and also bears the risks for bringing the goods to their final destination.</value>
  </data>
  <data name="PaymentB" xml:space="preserve">
    <value>DDP : The seller pays all costs (B)</value>
  </data>
  <data name="PaymentBEx" xml:space="preserve">
    <value>Delivered Duty Paid|This term means that the seller pays for all transportation costs and bears all risk until the goods have been delivered and pays the duty</value>
  </data>
  <data name="PaymentC" xml:space="preserve">
    <value>CNF : Seller pays for goods to the port of destination (C)</value>
  </data>
  <data name="PaymentCEx" xml:space="preserve">
    <value>Cost, Insurance and Freight|Seller must pay the costs and freight to bring the goods to the port of destination</value>
  </data>
  <data name="PaymentD" xml:space="preserve">
    <value>FOB : Seller pays for goods to the port of departure (D)</value>
  </data>
  <data name="PaymentDEx" xml:space="preserve">
    <value>Free On Board|The seller must load the goods on board the ship nominated by the buyer</value>
  </data>
  <data name="PaymentWho" xml:space="preserve">
    <value>Payment Who</value>
  </data>
  <data name="PaymentWitch" xml:space="preserve">
    <value>Payment Witch</value>
  </data>
  <data name="PickUp" xml:space="preserve">
    <value>Pickup Request</value>
  </data>
  <data name="Region" xml:space="preserve">
    <value>District</value>
  </data>
  <data name="RequestDate" xml:space="preserve">
    <value>Request Date</value>
  </data>
  <data name="RequestFormWrite" xml:space="preserve">
    <value>Transport Reservation</value>
  </data>
  <data name="Schedule" xml:space="preserve">
    <value>Schedule</value>
  </data>
  <data name="SelfDelivery" xml:space="preserve">
    <value>Self Delivery</value>
  </data>
  <data name="Shipper" xml:space="preserve">
    <value>Shipper</value>
  </data>
  <data name="ShipperCompanyName" xml:space="preserve">
    <value>Shipper Comapny Name</value>
  </data>
  <data name="StaffName" xml:space="preserve">
    <value>Staff</value>
  </data>
  <data name="Step1" xml:space="preserve">
    <value>Write</value>
    <comment>1</comment>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="ToOurOfficeDeliveryWay" xml:space="preserve">
    <value>Deliveryway to Our office</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="TradeDocument" xml:space="preserve">
    <value>Trade Document</value>
  </data>
  <data name="TradeDocumentRequest" xml:space="preserve">
    <value>Trade Document Request</value>
  </data>
  <data name="TransportWay" xml:space="preserve">
    <value>Shipment procedure</value>
  </data>
  <data name="TransportWay_InCountry" xml:space="preserve">
    <value>In Country</value>
    <comment>1</comment>
  </data>
  <data name="UnitCost" xml:space="preserve">
    <value>Unit Cost</value>
  </data>
  <data name="Volume" xml:space="preserve">
    <value>Volume</value>
  </data>
  <data name="SameAsAbove" xml:space="preserve">
    <value>SAME AS ABOVE</value>
  </data>
  <data name="Bank" xml:space="preserve">
    <value>Bank</value>
  </data>
  <data name="RequestFormETC" xml:space="preserve">
    <value>please leave a message about this Request</value>
  </data>
  <data name="RequestWriteDatetime" xml:space="preserve">
    <value>Write Time</value>
  </data>
  <data name="ProductCheked" xml:space="preserve">
    <value>상검</value>
  </data>
  <data name="SuChec" xml:space="preserve">
    <value>수책</value>
  </data>
  <data name="RequestDateTime" xml:space="preserve">
    <value>Request Datetime</value>
  </data>
  <data name="StockedDateExpectation" xml:space="preserve">
    <value>StockedDate Expectation</value>
    <comment>Admin/RequestView.aspx</comment>
  </data>
  <data name="ClearanceSubstituteEx" xml:space="preserve">
    <value>freight company take place in importing company.</value>
  </data>
  <data name="ClearanceSelf" xml:space="preserve">
    <value>own name</value>
    <comment>자기명의</comment>
  </data>
  <data name="ClearanceSelfEx" xml:space="preserve">
    <value>we proceed with the name of exporter that the customers directly choose.</value>
  </data>
  <data name="setoff" xml:space="preserve">
    <value>set-off</value>
  </data>
  <data name="stockdate" xml:space="preserve">
    <value>stock date</value>
  </data>
  <data name="transportinprogress" xml:space="preserve">
    <value>in progress</value>
  </data>
  <data name="waitingforrelease" xml:space="preserve">
    <value>waiting</value>
  </data>
  <data name="xhdrhksaudwhk" xml:space="preserve">
    <value>Clearance</value>
  </data>
  <data name="rbrur" xml:space="preserve">
    <value>size</value>
  </data>
  <data name="rhdrmqrkdor" xml:space="preserve">
    <value>Supply value</value>
    <comment>공급가액</comment>
  </data>
  <data name="rnlghk" xml:space="preserve">
    <value>You</value>
    <comment>귀하</comment>
  </data>
  <data name="skfWk" xml:space="preserve">
    <value>Date</value>
    <comment>날짜</comment>
  </data>
  <data name="tpdor" xml:space="preserve">
    <value>Tax</value>
    <comment>세액</comment>
  </data>
  <data name="wjswksrma" xml:space="preserve">
    <value>balance</value>
    <comment>전잔금</comment>
  </data>
  <data name="dksso" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="dkssorhkdehdtjddptj" xml:space="preserve">
    <value>With respect to the weight of cargo export in Guangdong Province from April 1, 250kg / 1cbm applied to. &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
Saturday shipping upon receipt of cargo is scheduled to take effect on the 4th, and Sunday schedule on receipt of the goods does not &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;include transportation.</value>
  </data>
  <data name="xhdrhksauddn" xml:space="preserve">
    <value>Clearance</value>
  </data>
</root>