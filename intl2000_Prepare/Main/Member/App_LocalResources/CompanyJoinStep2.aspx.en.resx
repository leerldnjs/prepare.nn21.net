<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Bu1" xml:space="preserve">
    <value>Section 01 : LIVE ANIMALS; ANIMAL PRODUCTS</value>
  </data>
  <data name="Bu10" xml:space="preserve">
    <value>Section 10 : PULP OF WOOD OR OF OTHER FIBROUS CELLULOSIC MATERIAL; WASTE AND SCRAP OF PAPER OR PAPERBOARD; PAPER AND PAPERBOARD AND ARTICLES THEREOF</value>
  </data>
  <data name="Bu11" xml:space="preserve">
    <value>Section 11 : TEXTILE AND TEXTILE ARTICLES</value>
  </data>
  <data name="Bu12" xml:space="preserve">
    <value>Section 12 : FOOTWEAR, HEADGEAR, UMBRELLAS, SUN-UMBRELLAS, WALKING-STICKS, SEAT-STICKS, WHIPS, RIDING-CROPS AND PARTS THEREOF; PREPARED FEATHERS AND ARTICLES MADE THEREWITH; ARTIFICIAL FLOWERS; ARTICLES OF HUMAN HAIR</value>
  </data>
  <data name="Bu13" xml:space="preserve">
    <value>Section 13 : ARTICLES OF STONE, PLASTER, CEMENT, ASBESTOS, MICA OR SIMILAR MATERIALS; CERAMIC PRODUCTS; GLASS AND GLASSWARE</value>
  </data>
  <data name="Bu14" xml:space="preserve">
    <value>Section 14 : NATURAL OR CULTURED PEARLS, PRECIOUS OR SEMIPRECIOUS STONES, PRECIOUS METALS, METALS CLAD WITH PRECIOUS METAL, AND ARTICLES THEREOF; IMITATION JEWELRY; COIN</value>
  </data>
  <data name="Bu15" xml:space="preserve">
    <value>Section 15 : BASE METALS AND ARTICLES OF BASE METAL</value>
  </data>
  <data name="Bu16" xml:space="preserve">
    <value>Section 16 : MACHINERY AND MECHANICAL APPLIANCES; ELECTRICAL EQUIPMENT; PARTS THEREOF; SOUND RECORDERS AND REPRODUCERS, AND VISION IMAGE AND SOUND RECORDERS AND REPRODUCERS, AND PARTS AND ACCESSORIES OF SUCH ARTICLES</value>
  </data>
  <data name="Bu17" xml:space="preserve">
    <value>Section 17 : VEHICLES, AIRCRAFT, VESSELS AND ASSOCIATED TRANSPORT EQUIPMENT</value>
  </data>
  <data name="Bu18" xml:space="preserve">
    <value>Section 18 : OPTICAL, PHOTOGRAPHIC, CINEMATOGRAPHIC, MEASURING, CHECKING, PRECISION, MEDICAL OR SURGICAL INSTRUMENTS AND APPARATUS; CLOCKS AND WATCHES; MUSICAL INSTRUMENTS; PARTS AND ACCESSORIES THEREOF</value>
  </data>
  <data name="Bu19" xml:space="preserve">
    <value>Section 19 : ARMS AND AMMUNITION; PARTS AND ACCESSORIES THEREOF</value>
  </data>
  <data name="Bu2" xml:space="preserve">
    <value>Section 02 : VEGETABLE PRODUCTS</value>
  </data>
  <data name="Bu20" xml:space="preserve">
    <value>Section 20 : MISCELLANEOUS MANUFACTURED ARTICLES</value>
  </data>
  <data name="Bu21" xml:space="preserve">
    <value>Section 21 : WORKS OF ART, COLLECTORS' PIECES AND ANTIQUES</value>
  </data>
  <data name="Bu3" xml:space="preserve">
    <value>Section 03 : ANIMAL OR VEGETABLE FATS AND OILS AND THEIR CLEAVAGE RODUCTS; PREPARED EDIBLE FATS; ANIMAL OR VEGETABLE WAXES</value>
  </data>
  <data name="Bu4" xml:space="preserve">
    <value>Section 04 : PREPARED FOODSTUFFS; BEVERAGES, SPIRITS, AND VINEGAR; TOBACCO AND MANUFACTURED TOBACCO SUBSTITUTES</value>
  </data>
  <data name="Bu5" xml:space="preserve">
    <value>Section 05 : MINERAL PRODUCTS</value>
  </data>
  <data name="Bu6" xml:space="preserve">
    <value>Section 06 : PRODUCTS OF THE CHEMICAL OR ALLIED INDUSTRIES</value>
  </data>
  <data name="Bu7" xml:space="preserve">
    <value>Section 07 : PLASTICS AND ARTICLES THEREOF RUBBER AND ARTICLES THEREOF</value>
  </data>
  <data name="Bu8" xml:space="preserve">
    <value>Section 08 : RAW HIDES AND SKINS, LEATHER, FURSKINS AND ARTICLES THEREOF; SADDLERY AND HARNESS; TRAVEL GOODS, HANDBAGS AND SIMILAR CONTAINERS; ARTICLES OF ANIMAL GUT (OTHER THAN SILKWORM GUT)</value>
  </data>
  <data name="Bu9" xml:space="preserve">
    <value>Section 09 : WOOD AND ARTICLES OF WOOD; WOOD CHARCOAL; CORK AND ARTICLES OF CORK; MANUFACTURERS OF STRAW,OF ESPARTO OR OF OTHER PLAITING MATERIALS; BASKETWARE AND WICKERWORK</value>
  </data>
  <data name="Buseo" xml:space="preserve">
    <value>division</value>
  </data>
  <data name="BusinessType1" xml:space="preserve">
    <value>corporate</value>
  </data>
  <data name="BusinessType1Detail" xml:space="preserve">
    <value>corporate detail</value>
  </data>
  <data name="BusinessType2" xml:space="preserve">
    <value>owned businesses</value>
  </data>
  <data name="BusinessType2Detail" xml:space="preserve">
    <value>owned businesses detail</value>
  </data>
  <data name="Damdangja" xml:space="preserve">
    <value>Staff</value>
  </data>
  <data name="DirectTEL" xml:space="preserve">
    <value>TEL</value>
  </data>
  <data name="Distribution" xml:space="preserve">
    <value>Distribution</value>
  </data>
  <data name="Duties" xml:space="preserve">
    <value>position</value>
  </data>
  <data name="Jikmu" xml:space="preserve">
    <value>duty</value>
  </data>
  <data name="Jikwi" xml:space="preserve">
    <value>post position</value>
  </data>
  <data name="JuminNo" xml:space="preserve">
    <value>Korea resident registration No</value>
  </data>
  <data name="MainTitleChn" xml:space="preserve">
    <value>Chinese Sign up</value>
  </data>
  <data name="MainTitleKor" xml:space="preserve">
    <value>Korean Sign up</value>
  </data>
  <data name="MajorItem" xml:space="preserve">
    <value>Major Items</value>
  </data>
  <data name="MustAddress" xml:space="preserve">
    <value>Please Type Address</value>
  </data>
  <data name="MustCompanyName" xml:space="preserve">
    <value>Please Type Company name</value>
  </data>
  <data name="MustPresidentName" xml:space="preserve">
    <value>Please Type President name</value>
  </data>
  <data name="MustSelectLocal" xml:space="preserve">
    <value>Please Select Area</value>
  </data>
  <data name="Production" xml:space="preserve">
    <value>Production</value>
  </data>
  <data name="Saler" xml:space="preserve">
    <value>Saler</value>
  </data>
  <data name="SaupjaGubun" xml:space="preserve">
    <value>corporate detail or Private</value>
  </data>
  <data name="SaupjaNo" xml:space="preserve">
    <value>business license no</value>
  </data>
  <data name="SelectionBu" xml:space="preserve">
    <value>Section select</value>
  </data>
  <data name="SelectionRyu" xml:space="preserve">
    <value>Chapter select</value>
  </data>
  <data name="StaffAdd" xml:space="preserve">
    <value>Staff</value>
  </data>
  <data name="Upjong" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="Upmu" xml:space="preserve">
    <value>business categorize</value>
  </data>
  <data name="Uptae" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Welcome</value>
  </data>
  <data name="WriterName" xml:space="preserve">
    <value>Writer name</value>
  </data>
  <data name="WrongCompanyEmail" xml:space="preserve">
    <value>Please Type By E-mail form</value>
  </data>
  <data name="WrongCompanyFAX" xml:space="preserve">
    <value>Please Type FAX by Number</value>
  </data>
  <data name="WrongCompanyTEL" xml:space="preserve">
    <value>Please Type TEL by Number</value>
  </data>
  <data name="WrongSaupjaNo" xml:space="preserve">
    <value>Please Type business license no Number</value>
  </data>
</root>